// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering includes a description (<p>) for checkbox if supplied 1`] = `
<div>
  <label>
    <input
      onChange={[Function]}
      type="checkbox"
    />
    test
  </label>
  <p>
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for date if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "date",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="date"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "date",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for datetime if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "datetime",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="datetime"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "datetime",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for integer if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "integer",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="integer"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "integer",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for multiselect if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
  >
    test
  </label>
  <select
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
    multiple={true}
    onChange={[Function]}
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for number if supplied 1`] = `
<div>
  <label
    focused={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "number",
      }
    }
    htmlFor=""
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="number"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "number",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for password if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "password",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="password"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "password",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for select if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
  >
    test
  </label>
  <select
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
    onChange={[Function]}
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for text if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "text",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="text"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "text",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a description (<p>) for textarea if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "textarea",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="textarea"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "textarea",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for checkbox if supplied 1`] = `
<div>
  <label>
    <input
      onChange={[Function]}
      type="checkbox"
    />
    test
  </label>
  <p>
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for date if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "date",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="date"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "date",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for datetime if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "datetime",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="datetime"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "datetime",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for integer if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "integer",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="integer"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "integer",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for multiselect if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
  >
    test
  </label>
  <select
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
    multiple={true}
    onChange={[Function]}
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "multiselect",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for number if supplied 1`] = `
<div>
  <label
    focused={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "number",
      }
    }
    htmlFor=""
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="number"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "number",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for password if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "password",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="password"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "password",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for select if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
  >
    test
  </label>
  <select
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
    onChange={[Function]}
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "select",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for text if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "text",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="text"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "text",
      }
    }
  >
    test
  </p>
</div>
`;

exports[`rendering includes a title (<label>) for textarea if supplied 1`] = `
<div>
  <label
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "textarea",
      }
    }
  >
    test
  </label>
  <input
    onChange={[Function]}
    type="textarea"
  />
  <p
    error={false}
    form={
      Object {
        "description": "test",
        "items": Array [],
        "key": Array [],
        "schema": Object {
          "type": "null",
        },
        "tabs": Array [],
        "title": "test",
        "titleMap": Array [],
        "type": "textarea",
      }
    }
  >
    test
  </p>
</div>
`;
